{"version":3,"sources":["modules/auth.js","modules/articles.js","components/ArticlesCard.jsx","components/DisplayArticles.jsx","components/SingleArticle.jsx","i18n.js","components/Header.jsx","components/LoginForm.jsx","components/ProtectedRoute.jsx","components/PaymentForm.jsx","modules/subscriptions.js","components/BecomeSubscriber.jsx","components/RegistrationForm.jsx","App.jsx","serviceWorker.js","index.js","state/store/initialState.js","state/reducers/rootReducer.js","state/store/configureStore.js"],"names":["apiUrl","auth","JtockAuth","host","prefixUrl","login","event","dispatch","history","a","preventDefault","email","target","value","password","signIn","response","type","payload","authenticated","success","currentUser","data","replace","pathname","errors","signUp","password_confirmation","push","message","full_messages","getAuthHeaders","headers","sessionStorage","getItem","JSON","parse","Accept","Articles","index","category","axios","get","result","articles","error","show","articleId","article","ArticlesCard","Card","as","Link","to","id","data-cy","image","Image","src","Content","Header","title","Description","lead","DisplayArticles","useState","setArticles","useParams","setMessage","location","useLocation","useEffect","getArticlesIndex","state","Container","Message","color","className","Grid","Row","columns","map","SingleArticle","setArticle","useSelector","getSingleArticle","Column","width","size","content","premium","role","Segment","textAlign","Button","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","interpolation","escapeValue","t","useTranslation","Menu","inverted","Item","position","Dropdown","item","text","onClick","changeLanguage","LoginForm","useDispatch","useHistory","register","e","Form","onSubmit","Input","icon","iconPosition","label","placeholder","name","primary","ProtectedRoute","children","render","injectStripe","props","payWithStripe","stripe","createToken","stripeResponse","submitPayment","token","Subscriptions","create","stripeToken","post","BecomeSubscriber","paymentStatus","RegistrationForm","App","fallback","exact","path","component","Boolean","window","hostname","match","initialState","rootReducer","action","configureStore","createStore","defaults","baseURL","store","ReactDOM","StrictMode","apiKey","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.31974b3f.chunk.js","sourcesContent":["import JtockAuth from \"j-tockauth\";\n\nlet apiUrl;\nif (process.env.NODE_ENV === \"production\") {\n  apiUrl = \"https://api-el-gaucho-nyheter.herokuapp.com\";\n} else {\n  apiUrl = \"http://localhost:3000\";\n}\n\nconst auth = new JtockAuth({\n  host: apiUrl,\n  prefixUrl: \"/api/v1\",\n});\n\nconst login = async (event, dispatch, history) => {\n  event.preventDefault();\n  try {\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const response = await auth.signIn(email, password);\n    dispatch({\n      type: \"AUTHENTICATE\",\n      payload: {\n        authenticated: response.success,\n        currentUser: response.data,\n      },\n    });\n\n    history.replace({ pathname: \"/\" });\n  } catch (error) {\n    return error.response.data.errors[0];\n  }\n};\n\nconst signUp = async (event, dispatch, history) => {\n  event.preventDefault();\n  try {\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const password_confirmation = event.target.password_confirmation.value;\n    const response = await auth.signUp({\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n    });\n\n    dispatch({\n      type: \"AUTHENTICATE\",\n      payload: {\n        authenticated: response.data.success,\n        currentUser: response.data.data,\n      },\n    });\n\n    history.push(\"/\", {\n      message:\n        \"Registration successful, now you have access to El-gaucho mobile app. Visit your appstore!\",\n    });\n  } catch (error) {\n    return error.response.data.errors.full_messages[0];\n  }\n};\n\nconst getAuthHeaders = () => {\n  let headers = sessionStorage.getItem(\"J-tockAuth-Storage\");\n  headers = JSON.parse(headers);\n  headers = {\n    ...headers,\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\",\n  };\n  return headers;\n};\n\nexport { login, signUp, getAuthHeaders };\n","import axios from \"axios\";\nimport { getAuthHeaders } from \"./auth\";\n\nconst Articles = {\n  async index(category) {\n    try {\n      let result;\n      if (category) {\n        result = await axios.get(`/articles/?category=${category}`);\n      } else {\n        result = await axios.get(\"/articles\");\n      }\n      return result.data.articles;\n    } catch (error) {\n      return error.response.data.error;\n    }\n  },\n\n  async show(articleId, authenticated) {\n    try {\n      let result;\n      if (authenticated) {\n        result = await axios.get(`/articles/${articleId}`, {\n          headers: getAuthHeaders(),\n        });\n      } else {\n        result = await axios.get(`/articles/${articleId}`);\n      }\n      return result.data.article;\n    } catch (error) {\n      return error.response.data.error;\n    }\n  },\n};\nexport default Articles;\n","import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst ArticlesCard = ({ article }) => {\n  return (\n    <>\n      <Card\n        as={Link}\n        to={`/articles/${article.id}`}\n        data-cy={\"article-\" + article.id}\n        id=\"cards\"\n      >\n        {article.image && <Image data-cy=\"image\" src={article.image} />}\n        <Card.Content>\n          <Card.Header>{article.title}</Card.Header>\n          <Card.Description>{article.lead}</Card.Description>\n        </Card.Content>\n      </Card>\n    </>\n  );\n};\nexport default ArticlesCard;\n","import { Message, Container, Grid } from \"semantic-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport Articles from \"../modules/articles\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport ArticlesCard from \"./ArticlesCard\";\n\nconst DisplayArticles = () => {\n  const [articles, setArticles] = useState([]);\n  const { category } = useParams();\n  const [message, setMessage] = useState();\n  let location = useLocation();\n\n  useEffect(() => {\n    const getArticlesIndex = async () => {\n      setArticles(await Articles.index(category));\n    };\n    getArticlesIndex();\n  }, [category]);\n\n  useEffect(() => {\n    if (location.state) {\n      setMessage(location.state.message);\n    }\n  }, [location]);\n\n  return (\n    <>\n      <Container id=\"message-container\">\n        {message && (\n          <Message data-cy=\"message\" color=\"green\">\n            {message}\n          </Message>\n        )}\n      </Container>\n      <Container className=\"articles-container\">\n        <Grid>\n          <Grid.Row columns={4}>\n            {articles.map((article) => {\n              return (\n                <>\n                  <ArticlesCard article={article} />\n                </>\n              );\n            })}\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default DisplayArticles;\n","import {\n  Image,\n  Grid,\n  Header,\n  Button,\n  Segment,\n  Container,\n} from \"semantic-ui-react\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Articles from \"../modules/articles\";\nimport { useSelector } from \"react-redux\";\n\nconst SingleArticle = () => {\n  const [article, setArticle] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const authenticated = useSelector((state) => state.authenticated);\n  const currentUser = useSelector((state) => state.currentUser);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getSingleArticle = async () => {\n      const response = await Articles.show(id, authenticated);\n      if (response.id) {\n        setArticle(response);\n      } else {\n        setMessage(response);\n      }\n    };\n\n    getSingleArticle();\n  }, [id, authenticated]);\n\n  return (\n    <>\n      {message ? (\n        <p data-cy=\"error-message\">{message}</p>\n      ) : (\n        <Container>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={13}>\n                <Header data-cy=\"title\">{article.title}</Header>\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Grid.Column width={10}>\n                <h5>{article.lead}</h5>\n                {article.image && (\n                  <Image data-cy=\"image\" size=\"medium\" src={article.image} />\n                )}\n              </Grid.Column>\n              <Grid.Column width={5}></Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Grid.Column width={10}>\n                <p data-cy=\"content\">{article.content}</p>\n              </Grid.Column>\n\n              <Grid.Column width={5}></Grid.Column>\n            </Grid.Row>\n            {article.premium && currentUser.role !== \"subscriber\" && (\n              <Segment color=\"black\" textAlign=\"center\">\n                <h4 data-cy=\"premium-message\">\n                  This is a premium article, become a subscriber to read full\n                  content{\" \"}\n                </h4>\n                <Button\n                  as={Link}\n                  to={authenticated ? \"/become-subscriber\" : \"/login\"}\n                  color=\"red\"\n                  data-cy=\"subscription-button\"\n                >\n                  {authenticated\n                    ? \"Buy subscription\"\n                    : \"You need to login to become subscriber\"}\n                </Button>\n              </Segment>\n            )}\n          </Grid>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default SingleArticle;\n","import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst fallbackLng = [\"en\"];\n\nconst availableLanguages = [\"en\", \"sv\", \"sp\"];\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng,\n    whitelist: availableLanguages,\n    interpolation: { escapeValue: false },\n  });\nexport default i18n;\n","import React from \"react\";\nimport { Menu, Dropdown } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\n\nconst Header = () => {\n  const authenticated = useSelector((state) => state.authenticated);\n  const currentUser = useSelector((state) => state.currentUser);\n  const { t } = useTranslation();\n\n  return (\n    <Menu inverted>\n      <Menu.Item>\n        <h1 data-cy=\"header\">{t(\"El Gaucho News\")}</h1>\n        <Menu.Item as={Link} to=\"/\" data-cy=\"home\" id=\"login\">\n          {t(\"Home\")}\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/category/news\" data-cy=\"news\" id=\"login\">\n          {t(\"News\")}\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/category/sports\" data-cy=\"sports\" id=\"login\">\n          {t(\"Sports\")}\n        </Menu.Item>\n        <Menu.Item\n          as={Link}\n          to=\"/category/politics\"\n          data-cy=\"politics\"\n          id=\"login\"\n        >\n          {t(\"Politics\")}\n        </Menu.Item>\n      </Menu.Item>\n      {authenticated ? (\n        currentUser.role !== \"subscriber\" && (\n          <Menu.Item\n            as={Link}\n            to=\"/become-subscriber\"\n            data-cy=\"become-subscriber\"\n            position=\"right\"\n            id=\"login\"\n          >\n            {t(\"Become Subscriber\")}\n          </Menu.Item>\n        )\n      ) : (\n        <Menu.Item\n          as={Link}\n          to=\"/login\"\n          data-cy=\"login\"\n          position=\"right\"\n          id=\"login\"\n        >\n          {t(\"Login\")}\n        </Menu.Item>\n      )}\n      <Menu.Item>\n        <Dropdown\n          data-cy=\"change-language\"\n          id=\"login\"\n          item\n          text={t(\"Language\")}\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item\n              onClick={() => {\n                i18n.changeLanguage(\"sv\");\n              }}\n            >\n              {t(\"Swedish\")}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                i18n.changeLanguage(\"en\");\n              }}\n            >\n              {t(\"English\")}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                i18n.changeLanguage(\"sp\");\n              }}\n            >\n              {t(\"Spanish\")}\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Button, Form, Container, Menu, Message } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { login } from \"../modules/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [message, setMessage] = useState();\n\n  const register = async (e) => {\n    e.preventDefault();\n    const response = await login(e, dispatch, history);\n    setMessage(response);\n  };\n\n  return (\n    <>\n      <Container>\n        <Form data-cy=\"login-form\" onSubmit={register}>\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            label=\"Email:\"\n            placeholder=\"email\"\n            name=\"email\"\n            type=\"email\"\n            data-cy=\"email\"\n          />\n\n          <Form.Input\n            icon=\"lock\"\n            iconPosition=\"left\"\n            placeholder=\"password\"\n            label=\"Password:\"\n            type=\"password\"\n            name=\"password\"\n            data-cy=\"password\"\n          />\n          <Button data-cy=\"submit\" content=\"Submit\" primary />\n        </Form>\n      </Container>\n\n      <Container>\n        <Menu.Item as={Link} to=\"/register\" data-cy=\"register\">\n          Don't have an account yet? Click here to sign up\n        </Menu.Item>\n\n        {message && (\n          <Message data-cy=\"message\" color=\"red\">\n            {message}\n          </Message>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst ProtectedRoute = ({ children }) => {\n  const authenticated = useSelector((state) => state.authenticated);\n\n  return (\n    <Route\n      render={() =>\n        authenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport {\n  CardExpiryElement,\n  CardCVCElement,\n  CardNumberElement,\n  injectStripe,\n} from \"react-stripe-elements\";\nimport { Button, Form, Container } from \"semantic-ui-react\";\n\nconst PaymentForm = (props) => {\n  const payWithStripe = async (event) => {\n    event.preventDefault();\n    let stripeResponse = await props.stripe.createToken();\n    props.submitPayment(stripeResponse.token.id);\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={payWithStripe}>\n        <div data-cy=\"card-number\">\n          <label>Card Number</label>\n          <CardNumberElement />\n        </div>\n\n        <div data-cy=\"card-expiry\">\n          <label>Card Expiry</label>\n          <CardExpiryElement />\n        </div>\n\n        <div data-cy=\"card-cvc\">\n          <label>Card CVC</label>\n          <CardCVCElement />\n        </div>\n\n        <Button color=\"blue\">Start your subscription</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default injectStripe(PaymentForm);\n","import axios from \"axios\";\nimport { getAuthHeaders } from \"./auth\";\n\nconst Subscriptions = {\n  async create(stripeToken) {\n    let response;\n    try {\n      const result = await axios.post(\n        \"/subscriptions\",\n        {\n          stripeToken: stripeToken,\n        },\n        {\n          headers: getAuthHeaders(),\n        }\n      );\n      response = { success: true, message: result.data.message };\n    } catch (error) {\n      response = { success: false, message: error.response.data.message };\n    } finally {\n      return response;\n    }\n  },\n};\n\nexport default Subscriptions;\n","import React, { useState } from \"react\";\nimport { Message } from \"semantic-ui-react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Elements } from \"react-stripe-elements\";\nimport PaymentForm from \"./PaymentForm\";\nimport Subscriptions from \"../modules/subscriptions\";\n\nconst BecomeSubscriber = () => {\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const submitPayment = async (stripeToken) => {\n    let paymentStatus = await Subscriptions.create(stripeToken);\n    if (paymentStatus.success) {\n      dispatch({\n        type: \"USER_IS_SUBSCRIBER\",\n        payload: {\n          role: \"subscriber\",\n        },\n      });\n      history.push(\"/\", { message: paymentStatus.message });\n    } else {\n      setMessage(paymentStatus.message);\n    }\n  };\n\n  return (\n    <>\n      {message && (\n        <Message data-cy=\"message\" color=\"red\">\n          {message}\n        </Message>\n      )}\n      <Elements>\n        <PaymentForm submitPayment={submitPayment} />\n      </Elements>\n    </>\n  );\n};\n\nexport default BecomeSubscriber;\n","import React, { useState } from \"react\";\nimport { Button, Form, Container, Message } from \"semantic-ui-react\";\nimport { signUp } from \"../modules/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [message, setMessage] = useState();\n\n  const register = async (e) => {\n    e.preventDefault();\n    const response = await signUp(e, dispatch, history);\n    setMessage(response);\n  };\n\n  return (\n    <Container>\n      <Form data-cy=\"registration-form\" onSubmit={register}>\n        <Form.Input\n          data-cy=\"email\"\n          icon=\"user\"\n          iconPosition=\"left\"\n          label=\"Email:\"\n          placeholder=\"email\"\n          name=\"email\"\n          type=\"email\"\n        />\n\n        <Form.Input\n          data-cy=\"password\"\n          icon=\"lock\"\n          iconPosition=\"left\"\n          placeholder=\"password\"\n          label=\"Password:\"\n          type=\"password\"\n          name=\"password\"\n        />\n\n        <Form.Input\n          data-cy=\"password-confirmation\"\n          icon=\"lock\"\n          iconPosition=\"left\"\n          placeholder=\"confirm password\"\n          label=\"Confirm Password:\"\n          type=\"password\"\n          name=\"password_confirmation\"\n        />\n        <Button data-cy=\"submit\" content=\"Submit\" primary />\n      </Form>\n\n      {message && (\n        <Message data-cy=\"message\" color=\"red\">\n          {message}\n        </Message>\n      )}\n    </Container>\n  );\n};\nexport default RegistrationForm;\n","import React, { Suspense } from \"react\";\nimport DisplayArticles from \"./components/DisplayArticles\";\nimport SingleArticle from \"./components/SingleArticle\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport LoginForm from \"./components/LoginForm\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport BecomeSubscriber from \"./components/BecomeSubscriber\";\nimport RegistrationForm from \"./components/RegistrationForm\";\n\nconst App = () => {\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/category/:category\" component={DisplayArticles} />\n          <Route exact path=\"/articles/:id\" component={SingleArticle} />\n          <Route exact path=\"/login\" component={LoginForm} />\n          <Route exact path=\"/register\" component={RegistrationForm} />\n\n          <ProtectedRoute path=\"/become-subscriber\">\n            <BecomeSubscriber />\n          </ProtectedRoute>\n\n          <Route path=\"/\" component={DisplayArticles} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./state/store/configureStore\";\nimport { StripeProvider } from \"react-stripe-elements\";\nimport \"./i18n\";\n\nlet apiUrl;\nif (process.env.NODE_ENV === \"production\") {\n  apiUrl = \"https://api-el-gaucho-nyheter.herokuapp.com/api/v1\";\n} else {\n  apiUrl = \"http://localhost:3000/api/v1\";\n}\naxios.defaults.baseURL = apiUrl;\nconst store = configureStore();\nwindow.store = store;\n\nReactDOM.render(\n  <React.StrictMode>\n    <StripeProvider apiKey=\"pk_test_51HdB6WLqoRP4iCAc86KxXieG7mYFdiNUY5VletydKDhZKC6BWEzoC13C29OGVHKMWo6dx6qTco9Kwqikcm5IOlZJ00Q1ajKLzs\">\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </StripeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","const initialState = {\n  authenticated: false,\n  currentUser: {},\n};\n\nexport default initialState;\n","import initialState from \"../store/initialState\";\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"AUTHENTICATE\":\n      return {\n        ...state,\n        ...action.payload,\n        role: action.payload.role,\n        \n      };\n    case \"USER_IS_SUBSCRIBER\":\n      return {\n        ...state,\n        currentUser: {\n          ...state.currentUser,\n          role: action.payload.role,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst configureStore = () => {\n  return createStore(rootReducer);\n};\n\nexport default configureStore;\n"],"sourceRoot":""}